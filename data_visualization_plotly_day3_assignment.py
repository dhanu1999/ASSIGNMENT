# -*- coding: utf-8 -*-
"""Data-Visualization-Plotly day3 assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r8WvwtHJYvqu3N6pbbDSDGvXzXKDrKTl
"""

!pip install plotly

import plotly.express as px 
import numpy as np  
  
# Creating the Figure instance
fig = px.line(x=[0.1, 1.2, 2.3], y=[1, 2.2, 3]) 
  
# showing the plot
fig.show()

# using the iris dataset
df = px.data.iris() 
df.head()

"""# Line Chart

Line plot in Plotly is much accessible and illustrious annexation to plotly which manage a variety of types of data and assemble easy-to-style statistic. With px.line each data position is represented as a vertex  (which location is given by the x and y columns) of a polyline mark in 2D space.
"""

import plotly.express as px 
  
# plotting the line chart
fig = px.line(df, x="species", y="petal_length") 
  
# showing the plot
fig.show()

import plotly.express as px 
  
# plotting the line chart
fig = px.line(df, x="sepal_length", y="petal_width") 
  
# showing the plot
fig.show()

"""# Bar Chart

A bar chart is a pictorial representation of data that presents categorical data with rectangular bars with heights or lengths proportional to the values that they represent. In other words, it is the pictorial representation of dataset. These data sets contain the numerical values of variables that represent the length or height.
"""

# plotting the bar chart
fig = px.bar(df, x="sepal_width", y="petal_length") 
  
# showing the plot
fig.show()

"""# Histogram

A histogram contains a rectangular area to display the statistical information which is proportional to the frequency of a variable and its width in successive numerical intervals. A graphical representation that manages a group of data points into different specified ranges. It has a special feature that shows no gaps between the bars and similar to a vertical bar graph.
"""

# plotting the histogram
fig = px.histogram(df, x="sepal_length", y="sepal_width") 
  
# showing the plot
fig.show()

"""# Scatter Plot and Bubble charts

A scatter plot is a set of dotted points to represent individual pieces of data in the horizontal and vertical axis. A graph in which the values of two variables are plotted along X-axis and Y-axis, the pattern of the resulting points reveals a correlation between them.

A bubble plot is a scatter plot with bubbles (color-filled circles). Bubbles have various sizes dependent on another variable in the data. It can be created using the scatter() method of plotly.express.
"""

# plotting the scatter chart
fig = px.scatter(df, x="species", y="petal_width") 
  
# showing the plot
fig.show()

# plotting the bubble chart
fig = px.scatter(df, x="species", y="sepal_width", 
                 size="sepal_length", color="species") 
  
# showing the plot
fig.show()

"""# Pie Chart

A pie chart is a circular statistical graphic, which is divided into slices to illustrate numerical proportions. It depicts a special chart that uses “pie slices”, where each sector shows the relative sizes of data. A circular chart cuts in a form of radii into segments describing relative frequencies or magnitude also known as circle graph.
"""

# using the tips dataset
df = px.data.tips() 
  
# plotting the pie chart
fig = px.pie(df, values="total_bill", names="day") 
  
# showing the plot
fig.show()

df = px.data.tips()
df.head()

"""# Box Plot

A Box Plot is also known as Whisker plot is created to display the summary of the set of data values having properties like minimum, first quartile, median, third quartile and maximum. In the box plot, a box is created from the first quartile to the third quartile, a verticle line is also there which goes through the box at the median. Here x-axis denotes the data to be plotted while the y-axis shows the frequency distribution.
"""

# using the tips dataset
df = px.data.tips() 
  
# plotting the box chart
fig = px.box(df, x="time", y="size") 
  
# showing the plot
fig.show()

"""# 3D Line Plots

Line plot in plotly is much accessible and illustrious annexation to plotly which manage a variety of types of data and assemble easy-to-style statistic. With px.line_3d each data position is represented as a vertex  (which location is given by the x, y and z columns) of a polyline mark in 3D space.
"""

# data to be pltted
df = px.data.tips() 
  
# plotting the figure
fig = px.line_3d(df, x="sex", y="day", 
                 z="time", color="sex") 
  
fig.show()

"""# 3D Scatter Plot

3D Scatter Plot can plot two-dimensional graphics that can be enhanced by mapping up to three additional variables while using the semantics of hue, size, and style parameters. All the parameter control visual semantic which are used to identify the different subsets. Using redundant semantics can be helpful for making graphics more accessible. It can be created using the scatter_3d function of plotly.express class.
"""

# Data to be plotted
df = px.data.tips() 
  
# Plotting the figure
fig = px.scatter_3d(df, x = 'sex', 
                    y = 'total_bill', 
                    z = 'tip', 
                    color = 'sex') 
  
fig.show()

